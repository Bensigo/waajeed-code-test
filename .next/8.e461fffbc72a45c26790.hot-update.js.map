{"version":3,"file":"8.e461fffbc72a45c26790.hot-update.js","sources":["webpack:///pages/signin.js","webpack:///src/store/action/auth.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Form from \"../src/components/Form\";\nimport Layout from \"../src/components/Layout/Index\";\nimport { signin } from \"../src/store/action/auth\"\nimport Router from \"next/router\";\n\nclass LoginPage extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n  handleChange = (e) => {\n    console.log(e.target.name);\n    return this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    // handle submit and push to dashboard page.\n    await this.props.login(email, password);\n    return Router.push(\"/dashboard\");\n  }\n  render() {\n    return (\n    <Layout>\n      <Form  \n        title=\"Login\" \n        onChange={this.handleChange} \n        email={this.state.email} \n        password={this.state.password}\n        onSubmit={this.handleSubmit}\n      />\n    </Layout>\n  )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authUser: state.auth.authUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(signin(email, password))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\n\n// WEBPACK FOOTER //\n// pages/signin.js","import { FB } from \"../../firebase\";\nexport const USER_SESSION = \"USER_SESSION\";\n\n// create new user\nfunction createUser(email, password) {\n  return FB().then(auth => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  })\n}\n// login user \nfunction login(email, password) {\n  return FB().then(auth => {\n    return auth.signInWithEmailAndPassword(email, password);\n  })\n}\n// logout user\nfunction logout() {\n  return FB().then(auth => {\n    return auth.signOut();\n  })\n}\n\n// password reset \nfunction resetPassword(email) {\n  return FB().then(auth => {\n    return auth.sendPasswordResetEmail(email);\n  })\n}\n\nexport const signUp = (email, password) => {\n  console.log(email,password);\n  return async (dispatch) => {\n    const currentUser = await createUser(email, password);\n    return dispatch({type: USER_SESSION, payload: currentUser});\n  }\n}\n\nexport const signin = (email, pwd) => {\n  return async (dispatch) => {\n    const currentUser = await login(email, pwd);\n    return dispatch({type: USER_SESSION, payload: currentUser});\n  }\n}\n\n\nexport const signout = () => {\n  return async (dispatch) => {\n    await logout()\n    return dispatch({type: USER_SESSION, payload: null})\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/store/action/auth.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;;;;;AAIA;AACA;AACA;AAGA;;;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;AA9BA;AACA;AA8BA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AADA;;;;;;;;;;;;AA3CA;AAiCA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAjDA;AAGA;AAMA;AAMA;AAOA;AAMA;AAQA;AAQA;;;;;;;;;A","sourceRoot":""}